###
# These are the default TS-setup for sfjquery
##

plugin.tx_sfjquery_pi1 = USER
plugin.tx_sfjquery_pi1 {
		# label=add UI jQuery script: Activate this checkbox to add the jquery UI-Script to your header-area.
	enableMoreJQuery = {$plugin.tx_sfjquery_pi1.enableMoreJQuery}
		# label=enable compatibility mode:If you are using jQuery with other JavaScript Frameworks like Scriptacolus, slideshows or slimboxes. If you check this you only can insert code into the domready textarea or you have to insert "jQuery" instead of "$" in your code. Activate this checkbox to activate jQuery compatibility mode.
	activateCompatibilityMode = {$plugin.tx_sfjquery_pi1.activateCompatibilityMode}
		# label=Use as a plain template machine:After activating this option sfjquery deactivates all js-header and you can use sfjquery as a plain template machine without any includes jQuery-js-files.
	useAsTemplateMachine = {$plugin.tx_sfjquery_pi1.useAsTemplateMachine}
		# label=change jquery-js-file:With this setting you can choose another jQuery-js-file. Leave empty to use default once. Values: fileadmin/jquery/jquery-1.3.2.min.js, others.
	alternateJQueryFile = {$plugin.tx_sfjquery_pi1.alternateJQueryFile}
		# label=change jquery-ui-js-file:With this setting you can choose another jQuery-ui-js-file. Leave empty to use default once. Values: fileadmin/jquery/jquery-ui-1.7.2.custom.min.js, others.
	alternateJQueryUIFile = {$plugin.tx_sfjquery_pi1.alternateJQueryUIFile}
		# label=add JS to upload files (ajaxupload.js):With this script you can define a button which opens a filebrowser and uploads your selected file directly to the server...if you want so...
	addPluginAjaxupload = {$plugin.tx_sfjquery_pi1.addPluginAjaxupload}
}